{"version":3,"sources":["components/forms/authorization-form.js","components/pages/authorization.js","components/modal.js","services/youtube.js","redux/actions/index.js","components/forms/favourite-form.js","components/favourite-list/favourite-list-item.js","components/favourite-list/favourite-list.js","components/pages/main/favourites.js","image/favourites/favourites.svg","components/forms/search-form.js","components/pages/main/search/search-default.js","image/grid/grid-selected.svg","image/list/list-selected.svg","image/grid/grid.svg","image/list/list.svg","components/filter.js","components/video-player.js","components/grid/grid-item.js","components/grid/grid.js","components/list/list-item.js","components/list/list.js","components/pages/main/search/search-result.js","components/pages/main/search.js","screens/screens-main.js","components/pages/main/body.js","components/pages/main/header.js","components/pages/main.js","screens/screens-app.js","components/app.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["AuthorizationForm","className","type","Authorization","Modal","disableModal","children","useEffect","document","querySelector","style","overflow","onClick","event","target","youtube","axios","create","baseURL","params","part","maxResults","key","videoInfo","requestName","order","get","q","then","data","totalResults","pageInfo","videoId","items","map","item","id","search","join","videoList","snippet","statistics","channelTitle","videoTitle","title","description","thumbnail","thumbnails","medium","url","viewCount","fetchVideoListSuccess","payload","fetchVideoListFailure","updateVideoList","dispatch","catch","error","connect","favouriteList","favouriteListItemIsAdded","favouriteListItemIsUpdate","undefined","input","useState","request","setRequest","setTitle","sortBy","setSortBy","sliderCount","setSliderCount","favouriteListItem","find","idx","count","handleChange","name","value","onSubmit","preventDefault","onChange","ReactSlider","max","thumbClassName","trackClassName","renderThumb","props","withRouter","favouriteListItemIsDeleted","history","modalMode","setModalMode","modalContent","requireName","push","toSearchVideos","favouriteListItems","Favourites","setInput","placeholder","src","favourite","SearchDefault","Filter","filterType","setFilterType","listSelected","list","gridSelected","grid","VideoPlayer","width","height","frameborder","allow","allowfullscreen","GridItem","Grid","gridItems","ListItem","List","listItems","videoData","filterContent","loading","content","Object","keys","length","ScreensMain","path","exact","component","Search","Body","Header","location","useLocation","mainClasses","pathname","favouritesClasses","to","Main","ScreensApp","App","initialState","reducer","state","action","newFavouriteListItem","updatedFavouriteListItem","slice","store","createStore","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.da2bdfe2.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../styles/forms/authorization-form.css';\r\n\r\nconst AuthorizationForm = () => {\r\n    return(\r\n        <form className=\"authorization__form\">\r\n            <div className=\"form__title\">Вход</div>\r\n            <input className=\"form__field\" type=\"text\"/>\r\n            <input className=\"form__field\" type=\"password\"/>\r\n            <input className=\"form__submit\" type=\"submit\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AuthorizationForm;","import React from 'react';\r\nimport '../../styles/pages/authorization.css';\r\n\r\nimport AuthorizationForm from '../forms/authorization-form';\r\n\r\nconst Authorization = () => {\r\n    return(\r\n        <div className=\"authorization\">\r\n            <AuthorizationForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authorization;","import React, { useEffect } from 'react';\r\nimport '../styles/modal.css';\r\n\r\nconst Modal = ({disableModal, children}) => {\r\n\r\n    const setModalIsInvisible = (event) => {\r\n        if(event.target.className === 'modal'){\r\n            disableModal()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.querySelector('html').style.overflow = 'hidden';\r\n        return () => document.querySelector('html').style.overflow = 'overlay';\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"modal\" onClick={setModalIsInvisible}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyB1jSPYDdlDZZa-jsAQyP_0jqpEK2A5lVg';\r\n\r\nconst youtube = axios.create({\r\n                baseURL: 'https://www.googleapis.com/youtube/v3/',\r\n                params:{\r\n                    part: 'snippet',\r\n                    maxResults: '12',\r\n                    key: KEY,\r\n                    type: 'video'\r\n                }\r\n            });\r\n\r\nconst search = (requestName, maxResults, order) => {\r\n    return youtube.get('/search', {\r\n                params: {\r\n                    q: requestName,\r\n                    maxResults,\r\n                    order\r\n                }\r\n            }).then(({data}) => {\r\n                return {\r\n                    totalResults: data.pageInfo.totalResults,\r\n                    videoId: data.items.map(item => item.id.videoId)\r\n                }\r\n            });\r\n}\r\n\r\nconst videoInfo = (requestName, maxResults, order) => {\r\n    return search(requestName, maxResults, order)\r\n    .then(({totalResults, videoId}) => {\r\n        return  youtube.get('/videos', {\r\n                    params:{\r\n                        id: videoId.join(','),\r\n                        part: 'snippet, statistics'\r\n                }\r\n        }).then(({data}) => {\r\n            return {\r\n                requestName,\r\n                totalResults,\r\n                videoList:  data.items.map(({id, snippet, statistics}) => {\r\n                                return {\r\n                                    videoId: id,\r\n                                    channelTitle: snippet.channelTitle,\r\n                                    videoTitle: snippet.title,\r\n                                    description: snippet.description,\r\n                                    thumbnail: snippet.thumbnails.medium.url,\r\n                                    viewCount: statistics.viewCount\r\n                                }\r\n                            })\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport {videoInfo, search}; ","import {videoInfo} from '../../services/youtube';\r\n\r\nconst fetchVideoListSuccess = (data) => {\r\n    return {\r\n        type: 'FETCH_VIDEO_LIST_SUCCESS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchVideoListFailure = (data) => {\r\n    return {\r\n        type: 'FETCH_VIDEO_LIST_FAILURE',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchVideoListRequest = () => {\r\n    return {\r\n        type: 'FETCH_VIDEO_LIST_REQUEST'\r\n    }\r\n}\r\n\r\nconst updateVideoList = (dispatch) => (requestName, maxResults = 12, order = 'relevance') => {\r\n    dispatch(fetchVideoListRequest());\r\n    videoInfo(requestName, maxResults, order)\r\n    .then(data => dispatch(fetchVideoListSuccess(data)))\r\n    .catch(error => dispatch(fetchVideoListFailure(error)));\r\n}\r\n\r\nconst favouriteListItemIsAdded = (data) => {\r\n    return{\r\n        type: 'FAVOURITELIST_ITEM_IS_ADDED',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst favouriteListItemIsUpdate = (id, data) => {\r\n    return{\r\n        type: 'FAVOURITELIST_ITEM_IS_UPDATE',\r\n        payload: {\r\n            id, \r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nconst favouriteListItemIsDeleted = (id) => {\r\n    return{\r\n        type: 'FAVOURITELIST_ITEM_IS_DELETED',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport {\r\n    updateVideoList, \r\n    favouriteListItemIsAdded, \r\n    favouriteListItemIsUpdate, \r\n    favouriteListItemIsDeleted\r\n    };","import React, { useEffect, useState } from 'react';\r\nimport ReactSlider from 'react-slider';\r\nimport '../../styles/forms/favourite-form.css';\r\nimport { connect } from 'react-redux';\r\nimport {favouriteListItemIsAdded, favouriteListItemIsUpdate} from '../../redux/actions/index';\r\n\r\nconst FavouriteForm = ({\r\n                    disableModal, \r\n                    id = undefined, \r\n                    input = undefined,\r\n                    favouriteList, \r\n                    favouriteListItemIsAdded, \r\n                    favouriteListItemIsUpdate\r\n                }) => {\r\n\r\n    const   [request, setRequest] = useState(''),\r\n            [title, setTitle] = useState(''),\r\n            [sortBy, setSortBy] = useState('date'),\r\n            [sliderCount, setSliderCount] = useState(12);\r\n\r\n    useEffect(() => {\r\n        if(input){\r\n            setRequest(input);\r\n        }\r\n        if(id) {\r\n            const favouriteListItem = favouriteList.find((item, idx) => idx === +id);\r\n            setRequest(favouriteListItem.requestName);\r\n            setTitle(favouriteListItem.title);\r\n            setSortBy(favouriteListItem.sortBy);\r\n            setSliderCount(favouriteListItem.count);\r\n        }\r\n    }, [id, input]);\r\n\r\n    const handleChange = (event) => {\r\n        switch(event.target.name){\r\n            case 'request': setRequest(event.target.value); \r\n                break;\r\n            case 'title': setTitle(event.target.value); \r\n                break;\r\n            case 'selector': setSortBy(event.target.value); \r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = {\r\n            requestName: request,\r\n            title,\r\n            sortBy,\r\n            count: sliderCount\r\n        };\r\n        if(id){\r\n            favouriteListItemIsUpdate(id, data);\r\n            disableModal();\r\n            return\r\n        }\r\n        favouriteListItemIsAdded(data);\r\n        disableModal();\r\n    }\r\n\r\n    return(\r\n        <form className=\"favourite__form\" onSubmit={handleSubmit}>\r\n            <div className=\"form__title\">Сохранить запрос</div>\r\n            <div className=\"form__field\">\r\n                <div className=\"field__title\">Запрос</div>\r\n                <input  type=\"text\" \r\n                        className=\"field__field\" \r\n                        name=\"request\" \r\n                        value={request}\r\n                        onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <div className=\"field__title\">* Название</div>\r\n                <input  type=\"text\"\r\n                        name=\"title\"\r\n                        className=\"field__field\"\r\n                        value={title}\r\n                        onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <div className=\"field__title\">Сортировать по</div>\r\n                <select className=\"field__field\" \r\n                        name=\"selector\" \r\n                        value={sortBy}  \r\n                        onChange={handleChange}>\r\n                    <option value=\"relevance\">По релевантности</option>\r\n                    <option value=\"date\">По дате загрузки</option>\r\n                    <option value=\"viewCount\">По числу просмотров</option>\r\n                    <option value=\"rating\">По рейтингу</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form__slider\">\r\n                <div className=\"slider__title\">\r\n                    Максимальное количество\r\n                </div>\r\n                <div className=\"slider__body\">\r\n                    <ReactSlider\r\n                        className=\"slider\"\r\n                        max={50}\r\n                        thumbClassName=\"slider__thumb\"\r\n                        trackClassName=\"slider__track\"\r\n                        value={sliderCount}\r\n                        onChange={setSliderCount}\r\n                        renderThumb={(props) => {\r\n                            return <div {...props}></div>;\r\n                        }}\r\n                    /> \r\n                    <div className=\"slider__count\">\r\n                        {sliderCount}\r\n                    </div> \r\n                </div>      \r\n            </div>\r\n            <div className=\"form__buttons\">\r\n                <input type=\"reset\" value=\"Не сохранять\" onClick={disableModal} className=\"buttons__cancel\"/>\r\n                <input type=\"submit\" value=\"Сохранить\" className=\"buttons__submit\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({favouriteList}) => {\r\n    return {\r\n        favouriteList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        favouriteListItemIsAdded: (data) => dispatch(favouriteListItemIsAdded(data)),\r\n        favouriteListItemIsUpdate: (id, data) => dispatch(favouriteListItemIsUpdate(id, data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteForm);","import React, { useState } from 'react';\r\nimport '../../styles/favourite-list/favourite-list-item.css';\r\nimport Modal from '../modal';\r\nimport {favouriteListItemIsDeleted, updateVideoList} from '../../redux/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FavouriteForm from '../forms/favourite-form';\r\n\r\n\r\nconst FavouriteListItem = ({  \r\n                            id, \r\n                            title, \r\n                            favouriteList,\r\n                            favouriteListItemIsDeleted,\r\n                            updateVideoList,\r\n                            history\r\n                        }) => {\r\n\r\n    const [modalMode, setModalMode] = useState(false);\r\n\r\n    const modalContent = modalMode ? \r\n    (<Modal disableModal={() => setModalMode(false)}>\r\n        <FavouriteForm id={`${id}`} disableModal={() => setModalMode(false)}/>\r\n    </Modal>) \r\n    : null;\r\n\r\n    const toSearchVideos = () => {\r\n        const requestName = favouriteList[id].requireName;\r\n        const maxResults = favouriteList[id].count;\r\n        const order = favouriteList[id].sortBy;\r\n        updateVideoList(requestName, maxResults, order);\r\n        history.push('/main');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <li key={id} className=\"favourite-list__item\">\r\n                <span   className=\"item__title\" \r\n                        onClick={() => toSearchVideos()}\r\n                >{title}</span>\r\n                <div className=\"item__btns\">\r\n                    <button className=\"item__edit-btn\" \r\n                            onClick={() => {\r\n                                setModalMode(true);\r\n                                modalMode ? document.querySelector('html').style.overflow = 'hidden' : \r\n                                document.querySelector('html').style.overflow = 'overlay';\r\n                            }}\r\n                    >Редактировать</button>\r\n                    <button className=\"item__delete-btn\" \r\n                            onClick={() => favouriteListItemIsDeleted(id)}\r\n                    >Удалить</button>\r\n                </div>\r\n            </li>\r\n            {modalContent}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({favouriteList}) => {\r\n    return{\r\n        favouriteList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        favouriteListItemIsDeleted: (id) => dispatch(favouriteListItemIsDeleted(id)),\r\n        updateVideoList: updateVideoList(dispatch)\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FavouriteListItem)); ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/favourite-list/favourite-list.css';\r\n\r\nimport FavouriteListItem from './favourite-list-item';\r\n\r\n\r\nconst FavouriteList = ({favouriteList}) => {\r\n    const favouriteListItems = favouriteList.map(({title}, idx) => {\r\n        return <FavouriteListItem key={idx} id={idx} title={title}/>;\r\n    });\r\n\r\n    return(\r\n        <ul className=\"favourite-list\">\r\n            {favouriteListItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({favouriteList}) => {\r\n    return {\r\n        favouriteList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FavouriteList);","import React from 'react';\r\nimport '../../../styles/pages/main/favourites.css'\r\nimport FavouriteList from '../../favourite-list/favourite-list';\r\n\r\nconst Favourites = () => {\r\n    return(\r\n        <div className=\"favourites\">\r\n            <div className=\"favourites__title\">Избранное</div>\r\n            <FavouriteList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourites;","export default __webpack_public_path__ + \"static/media/favourites.c6fe4391.svg\";","import React, { useEffect, useState } from 'react';\r\nimport '../../styles/forms/search-form.css';\r\nimport {updateVideoList} from '../../redux/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport favourite from '../../image/favourites/favourites.svg';\r\n\r\nimport Modal from '../modal';\r\nimport FavouriteForm from './favourite-form';\r\n\r\nconst SearchForm = ({\r\n                    updateVideoList, \r\n                    requestName\r\n                    }) => {\r\n\r\n    const [input, setInput] = useState('');\r\n    const [modalMode, setModalMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(requestName){\r\n            setInput(requestName);\r\n        }\r\n    }, [requestName]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        updateVideoList(input);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setInput(event.target.value);\r\n    }\r\n\r\n    const modalContent = modalMode ? \r\n    (<Modal disableModal={() => setModalMode(false)}>\r\n        <FavouriteForm input={input} disableModal={() => setModalMode(false)}/>\r\n    </Modal>) \r\n    : null;\r\n\r\n    return(\r\n        <>\r\n        <form className=\"search__form\" onSubmit={handleSubmit}>\r\n            <div className=\"form__title\">Поиск видео</div>\r\n            <div className=\"form__body\">\r\n                <input className=\"form__field\" onChange={handleChange} value={input} type=\"text\" placeholder=\"Что хотите посмотреть?\"/>\r\n                <input className=\"form__submit\" type=\"submit\" value=\"Найти\"/>\r\n                <div className=\"form__favourite-btn\"><img onClick={() => setModalMode(true)} src={favourite}/></div>\r\n            </div>\r\n        </form>\r\n        {modalContent}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateVideoList: updateVideoList(dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchForm);","import React, { Fragment } from 'react';\r\nimport './../../../../styles/pages/main/search/search-default.css';\r\n\r\nimport SearchForm from '../../../forms/search-form';\r\n\r\nconst SearchDefault = () => {\r\n    return(\r\n        <div className=\"search-default\">\r\n            <SearchForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchDefault;","export default __webpack_public_path__ + \"static/media/grid-selected.10e3a154.svg\";","export default __webpack_public_path__ + \"static/media/list-selected.0db44f7d.svg\";","export default __webpack_public_path__ + \"static/media/grid.838af36c.svg\";","export default __webpack_public_path__ + \"static/media/list.6dde3dc3.svg\";","import React from 'react';\r\nimport '../styles/filter.css';\r\n\r\nimport gridSelected from '../image/grid/grid-selected.svg';\r\nimport listSelected from '../image/list/list-selected.svg';\r\nimport grid from '../image/grid/grid.svg';\r\nimport list from '../image/list/list.svg';\r\n\r\nconst Filter = ({filterType, setFilterType, totalResults, requestName}) => {\r\n\r\n    const name = requestName ? `Видео по запросу \"${requestName}\"` : '';\r\n    const count = totalResults ? `${totalResults}` : ''\r\n\r\n    return(\r\n        <div className=\"filter\">\r\n            <div className=\"filter__header\">\r\n                <div className=\"header__body\">\r\n                    <div className=\"header__name\">{name}</div>\r\n                    <div className=\"header__count\">{count}</div>\r\n                </div>\r\n                <div className=\"header__view\">\r\n                    <div className=\"view__item\" onClick={() => setFilterType('list')}>\r\n                        <img src={filterType == 'list' ? listSelected : list}/>\r\n                    </div>\r\n                    <div className=\"view__item\" onClick={() => setFilterType('grid')}>\r\n                        <img src={filterType == 'grid' ? gridSelected : grid}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst VideoPlayer = ({videoId, videoTitle}) => {\r\n    return(\r\n        <iframe width=\"861\" \r\n                height=\"484\" \r\n                src={`https://www.youtube.com/embed/${videoId}`}\r\n                title={videoTitle} \r\n                frameborder=\"0\" \r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                allowfullscreen>\r\n        </iframe>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer;","import React, { useState } from 'react';\r\nimport '../../styles/grid/grid-item.css';\r\n\r\nimport Modal from '../modal';\r\nimport VideoPlayer from '../video-player';\r\n\r\nconst GridItem = ({ \r\n                    channelTitle, \r\n                    thumbnail, \r\n                    viewCount, \r\n                    videoTitle, \r\n                    videoId\r\n                }) => {\r\n\r\n    const [modalMode, setModalMode] = useState(false);\r\n\r\n    const modalContent = modalMode ? \r\n    (<Modal disableModal={() => setModalMode(false)}>\r\n        <VideoPlayer    videoId={videoId}\r\n                        videoTitle={videoTitle}/>\r\n    </Modal>) \r\n    : null;\r\n\r\n    return(\r\n        <div className=\"grid__item\">\r\n            <div    className=\"item__video\"\r\n                    onClick={() => setModalMode(true)}>\r\n                <img src={thumbnail}/>\r\n            </div>\r\n            <div    className=\"item__title\"\r\n                    onClick={() => setModalMode(true)}\r\n                    >\r\n                {videoTitle}\r\n            </div>\r\n            <div className=\"item__description\">\r\n                <div className=\"item__channel-title\">{channelTitle}</div>\r\n                <div className=\"item__count\">{viewCount} просмотров</div>\r\n            </div>\r\n            {modalContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridItem","import React from 'react';\r\nimport GridItem from './grid-item';\r\nimport '../../styles/grid/grid.css';\r\n\r\nconst Grid = ({videoList}) => {\r\n\r\n    const gridItems = videoList.map(({channelTitle, thumbnail, viewCount, videoTitle, videoId}) => {\r\n        return <GridItem    videoId={videoId} \r\n                            thumbnail={thumbnail} \r\n                            videoTitle={videoTitle} \r\n                            channelTitle={channelTitle} \r\n                            viewCount={viewCount}/>\r\n    });\r\n\r\n    return(\r\n        <div className=\"grid\">\r\n            {gridItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid","import React, { useState } from 'react';\r\nimport '../../styles/list/list-item.css';\r\n\r\nimport Modal from '../modal';\r\nimport VideoPlayer from '../video-player';\r\n\r\nconst ListItem = ({ \r\n                    videoId, \r\n                    thumbnail, \r\n                    videoTitle, \r\n                    channelTitle, \r\n                    viewCount\r\n                }) => {\r\n\r\n    const [modalMode, setModalMode] = useState(false);\r\n\r\n    const modalContent = modalMode ? \r\n    (<Modal disableModal={() => setModalMode(false)}>\r\n        <VideoPlayer    videoId={videoId}\r\n                        videoTitle={videoTitle}/>\r\n    </Modal>) \r\n    : null;\r\n\r\n    return(\r\n        <li key={videoId} className=\"list__item\">\r\n            <div    className=\"item__video\" \r\n                    onClick={() => setModalMode(true)}>\r\n                <img src={thumbnail}/>\r\n            </div>\r\n            <div className=\"item__body\">\r\n                <div    className=\"item__title\" \r\n                        onClick={() => setModalMode(true)}>\r\n                    {videoTitle}\r\n                </div>\r\n                <div className=\"item__description\">\r\n                    <div className=\"item__channel-title\">{channelTitle}</div>\r\n                    <div className=\"item__count\">{viewCount} просмотров</div>\r\n                </div>\r\n            </div>\r\n            {modalContent}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './list-item';\r\nimport '../../styles/list/list.css';\r\n\r\nconst List = ({videoList}) => {\r\n\r\n    const listItems = videoList.map(({channelTitle, thumbnail, viewCount, videoTitle, videoId}) => {\r\n        return <ListItem    videoId={videoId} \r\n                            thumbnail={thumbnail} \r\n                            videoTitle={videoTitle} \r\n                            channelTitle={channelTitle} \r\n                            viewCount={viewCount}/>\r\n    });\r\n\r\n    return(\r\n        <ul className=\"list\">\r\n            {listItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport Filter from '../../../filter';\r\nimport SearchForm from '../../../forms/search-form';\r\nimport Grid from '../../../grid/grid';\r\nimport List from '../../../list/list';\r\nimport '../../../../styles/pages/main/search/search-result.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SearchResult = ({totalResults, requestName, videoList}) => {\r\n\r\n    const [filterType, setFilterType] = useState('grid');\r\n\r\n    const filter =  filterType === 'grid' ? <Grid videoList={videoList}/> : \r\n                    filterType === 'list' ? <List videoList={videoList}/> : null ;\r\n\r\n    const filterContent = videoList ? filter : null;\r\n\r\n    return(\r\n        <div className=\"search-result\">\r\n            <SearchForm requestName={requestName}/>\r\n            <Filter filterType={filterType} \r\n                    setFilterType={setFilterType}\r\n                    totalResults={totalResults}\r\n                    requestName={requestName}\r\n                    />\r\n            {filterContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({videoData}) => {\r\n    return {\r\n        requestName: videoData.requestName,\r\n        totalResults: videoData.totalResults,\r\n        videoList: videoData.videoList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchResult);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SearchDefault from './search/search-default';\r\nimport SearchResult from './search/search-result';\r\n// import store from '../../../redux/store'\r\n\r\nconst Search = ({videoData, loading}) => {\r\n    const content = (loading || (Object.keys(videoData).length > 0)) ? (<SearchResult/>) : (<SearchDefault/>);\r\n    return(\r\n        <>\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({videoData, loading}) => {\r\n    return {\r\n        videoData,\r\n        loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search);","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Favourites from '../components/pages/main/favourites';\r\nimport Search from '../components/pages/main/search';\r\n\r\nconst ScreensMain = () => {\r\n    return(\r\n        <Switch>\r\n            <Route path=\"/main\" exact component={Search}/>\r\n            <Route path=\"/main/favourites\" component={Favourites}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ScreensMain;","import React from 'react';\r\nimport '../../../styles/pages/main/body.css';\r\n\r\nimport ScreensMain from '../../../screens/screens-main';\r\n\r\nconst Body = () => {\r\n    return(\r\n        <main className=\"main__body\">\r\n            <div className=\"container\">\r\n                <ScreensMain/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../../../styles/pages/main/header.css';\r\n\r\nconst Header = () => {\r\n\r\n    const location = useLocation();\r\n\r\n    const mainClasses = location.pathname === '/main' ? \"button active\" : \"button\";\r\n    const favouritesClasses = location.pathname === '/main/favourites' ? \"button active\" : \"button\";\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header-wrap\">\r\n                    <nav className=\"header__nav\">\r\n                        <Link to=\"/main\">\r\n                            <button className={mainClasses}>Поиск</button>\r\n                        </Link>\r\n                        <Link to=\"/main/favourites\">\r\n                            <button className={favouritesClasses}>Избранное</button>\r\n                        </Link>\r\n                    </nav>\r\n                    <button className=\"button\">Выйти</button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../../styles/pages/main.css';\r\nimport Body from './main/body';\r\n\r\nimport Header from './main/header';\r\n\r\nconst Main = () => {\r\n\r\n    return(\r\n        <div className=\"main\">\r\n            <Header/>\r\n            <Body/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Authorization from '../components/pages/authorization';\r\nimport Main from '../components/pages/main';\r\n\r\nconst ScreensApp = () => {\r\n    return(\r\n        <Switch>\r\n                <Route path=\"/authorization\" component={Authorization}/>\r\n                <Route path=\"/main\" component={Main}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ScreensApp;","import React from 'react';\r\nimport ScreensApp from '../screens/screens-app';\r\nimport '../styles/app.css';\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"app\">\r\n            <ScreensApp/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const initialState = {\r\n    loading: false,\r\n    error: null,\r\n    favouriteList: [\r\n        {\r\n            requestName: 'Metallica',\r\n            title: 'Metallica',\r\n            sortBy: 'rating',\r\n            count: 12\r\n        },\r\n        {\r\n            requestName: 'Megadeth',\r\n            title: 'Megadeth',\r\n            sortBy: 'relevance',\r\n            count: 17\r\n        },\r\n        {\r\n            requestName: 'Anthrax',\r\n            title: 'Anthrax',\r\n            sortBy: 'date',\r\n            count: 15\r\n        }\r\n    ],\r\n    videoData: {}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_VIDEO_LIST_SUCCESS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                videoData: action.payload\r\n            };\r\n        case 'FETCH_VIDEO_LIST_FAILURE':\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n                videoData: {}\r\n            };\r\n        case 'FETCH_VIDEO_LIST_REQUEST':\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n                videoData: {}\r\n            };\r\n        case 'FAVOURITELIST_ITEM_IS_ADDED':\r\n            const newFavouriteListItem = {\r\n                requestName: action.payload.requestName,\r\n                title: action.payload.title,\r\n                sortBy: action.payload.sortBy,\r\n                count: action.payload.count\r\n            } \r\n            return {\r\n                ...state,\r\n                favouriteList: [\r\n                    ...state.favouriteList,\r\n                    newFavouriteListItem\r\n                ]\r\n            }\r\n        case 'FAVOURITELIST_ITEM_IS_UPDATE':\r\n            const updatedFavouriteListItem = {\r\n                requestName: action.payload.data.requestName,\r\n                title: action.payload.data.title,\r\n                sortBy: action.payload.data.sortBy,\r\n                count: action.payload.data.count\r\n            }\r\n            return{\r\n                ...state,\r\n                favouriteList: [\r\n                    ...state.favouriteList.slice(0, action.payload.id),\r\n                    updatedFavouriteListItem,\r\n                    ...state.favouriteList.slice(+action.payload.id + 1)\r\n                ]\r\n            }\r\n        case 'FAVOURITELIST_ITEM_IS_DELETED':\r\n            return {\r\n                ...state,\r\n                favouriteList: [\r\n                    ...state.favouriteList.slice(0, action.payload),\r\n                    ...state.favouriteList.slice(+action.payload + 1)\r\n                ]\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer/index';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './components/app';\r\nimport './index.css';\r\n\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <App/>\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}